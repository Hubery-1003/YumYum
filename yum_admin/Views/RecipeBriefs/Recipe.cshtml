@model IEnumerable<yum_admin.Models.ViewModels.RecipeViewModel>


@{
    ViewBag.Title = "Recipe List";
    var latestRecipes = Model
        .GroupBy(r => r.RecipeId)
        .Select(g => g.OrderByDescending(r => r.RecipeRecDate).FirstOrDefault());
}



<div class="container">
    <div class="mt-5"></div>
    <h1>食譜審查</h1>
    <div class="mt-3 mb-2"></div>

    <div class="w-100 px-3 mb-3 ms-2 d-flex align-items-center">
        <div class="d-flex" style="flex-basis:55%;" id="status-sort">
            <input class="me-1" type="radio" name="sort" value="99" id="all" /><label for="all" class="me-3">全部</label>
            <input class="me-1" type="radio" name="sort" value="1" id="already" /><label for="new" class="me-3">新上架</label>
            <input class="me-1" type="radio" name="sort" value="3" id="wait" /><label for="wait" class="me-3">待審核</label>
            <input class="me-1" type="radio" name="sort" value="2" id="edit" /><label for="fail" class="me-3">退回請改</label>
            <input class="me-1" type="radio" name="sort" value="4" id="retn" /><label for="approve" class="me-3">已確認</label>
            @* <input class="me-1" type="radio" name="sort" value="0" id="edit" /><label for="draft" class="me-3">草稿</label> *@


        </div>
    </div>



    <!-- 表頭 -->
    <ul class="responsive-table">
        <li class="table-header">
            <div class="col col-1">狀態</div>
            <div class="col col-2">食譜名稱</div>
            <div class="col col-3">作者</div>
            <div class="col col-4">步驟</div>
            <div class="col col-5">異動日期</div>
            <div class="col col-6">變更</div>
        </li>


        @foreach (var item in latestRecipes)
        {

            

                <!-- 判斷狀態顯示 -->

                    string idName = "";
                    string cssClass = "";
                    string Text = "";
                    int stateCode = item?.RecipeStateCode ?? 0; // 預設值為 0（草稿）

                    switch (stateCode)
                    {
                        case 1:
                            idName = "StatusNew";
                            cssClass = "btn-primary";
                            Text = "新上架";
                            break;
                        case 2:
                            idName = "StatusReturn";
                            cssClass = "btn-danger";
                            Text = "退回請改";
                            break;
                        case 3:
                            idName = "StatusPending";
                            cssClass = "btn-warning";
                            Text = "待審查";
                            break;
                        case 4:
                            idName = "StatusApproved";
                            cssClass = "btn-success";
                            Text = "已確認";
                            break;
                        case 5:
                            idName = "StatusDefault";
                            cssClass = "btn-secondary";
                            Text = "已隱藏";
                            break;
                        case 0:
                            idName = "StatusDefault";
                            cssClass = "btn-secondary";
                            Text = "草稿";
                            break;
                        default:
                            idName = "StatusNew";
                            cssClass = "btn-secondary"; 
                            Text = "未知狀態";
                            break;
                    }

            <!-- 每一筆資料行  -->
            <li class="table-row" data-state="@stateCode">

                <div class="col col-1" data-label="RecipeStateDescript" id="@idName">
                    <div class="status-label @cssClass rounded-5 align-content-center fw-400">
                        <span>@Text</span>
                    </div>
                </div>

                <div class="col col-2" data-label="RecipeName">@item!.RecipeName</div>
                <div class="col col-3" data-label="UserName">@item!.UserNickname</div>
                <div class="col col-4" data-label="RecipeSteps">@item!.RecipeField</div>
                <div class="col col-5" data-label="ModificationDate">@item!.RecipeRecDate.ToString("yyyy-MM-dd")</div>
                <div class="col col-6" data-label="ModificationBtn">

                    @* 食譜詳情按鈕 *@
                    <button id="@item.RecipeField" class="btn text-center justify-content-center lh-5 btn-hover " onclick="window.location.href='@Url.Action("RecipeDetail", "RecipeBriefs", new { recipeId = item.RecipeId })';">
                        <svg class="" height="20px" viewBox="0 -960 960 960" width="20px" fill="none">
                            <path d="M216-216h51l375-375-51-51-375 375v51Zm-72 72v-153l498-498q11-11 23.84-16 12.83-5 27-5 14.16 0 27.16 5t24 16l51 51q11 11 16 24t5 26.54q0 14.45-5.02 27.54T795-642L297-144H144Zm600-549-51-51 51 51Zm-127.95 76.95L591-642l51 51-25.95-25.05Z"
                                  fill="#0d6efd" />
                        </svg>
                    </button>
                    @* 食譜刪除按鈕 *@
                    @* <button id="btn-delete"
                            class="btn text-center justify-content-center lh-5 btn-hover btn-delete"
                            data-bs-toggle="modal"
                            data-bs-target="#deleteModal"
                            data-recipeid="@item.RecipeId">
                        <svg class="" height="20px" viewBox="0 -960 960 960" width="20px" fill="none">
                            <path d="M312-144q-29.7 0-50.85-21.15Q240-186.3 240-216v-480h-48v-72h192v-48h192v48h192v72h-48v479.57Q720-186 698.85-165T648-144H312Zm336-552H312v480h336v-480ZM384-288h72v-336h-72v336Zm120 0h72v-336h-72v336ZM312-696v480-480Z" />
                        </svg>
                    </button> *@

                    


                </div>
            </li>
        }
    </ul>
</div>




<!-- Toast -->
@* <div class="toast-container position-fixed top-0 end-0 p-3" id="toast-container">
    <div id="toast" class="toast" style="display:none;">
        <div class="toast-header">
            <strong class="me-auto">訊息</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toast-message"></div>
    </div>
</div> *@



<!-- CSRF 防護 -->

<form method="post">
    @Html.AntiForgeryToken()
</form>





@section Scripts {

    <script>
       
        //state篩選
        document.addEventListener("DOMContentLoaded", function () {
            const radios = document.querySelectorAll('input[name="sort"]');
            const rows = document.querySelectorAll('.table-row');

            radios.forEach(radio => {
                radio.addEventListener("change", function () {
                    const selectedValue = this.value; // 取得選中的 radio button 的值

                    rows.forEach(row => {
                        const rowState = row.getAttribute("data-state");

                        // 如果選中的值為 "99"（全部），或列的狀態值符合選中的值，顯示該列
                        if (selectedValue === "99" || rowState === selectedValue) {
                            row.style.display = ""; // 顯示
                        } else {
                            row.style.display = "none"; // 隱藏
                        }
                    });
                });
            });
        });



        //Approve -- window alert 提示顯現

        document.addEventListener("DOMContentLoaded", () => {
            // 檢查 URL 的 Query String
            const urlParams = new URLSearchParams(window.location.search);
            const alertMessage = urlParams.get("toastMessage"); // 重用 Query String

            if (alertMessage) {
                showAlert(alertMessage); // 顯示 Alert
            }
        });

        function showAlert(message) {
            // 使用 window.alert() 顯示訊息
            alert(message);

            // 如果需要進一步邏輯，可以在這裡執行
            console.log("Alert has been displayed with message:", message);
        }

        // //Approve -- Toast 提示顯現
        // document.addEventListener("DOMContentLoaded", () => {
        //     const toastElement = document.getElementById("toast");
        //     console.log("Initial classes for toast:", toastElement.classList);
        // });


        // document.addEventListener("DOMContentLoaded", () => {
        //     // 檢查 URL 的 Query String
        //     const urlParams = new URLSearchParams(window.location.search);
        //     const toastMessage = urlParams.get("toastMessage");
        //     const success = urlParams.get("success");

        //     if (toastMessage) {
        //         showToast(toastMessage, success === 'true'); // 顯示 Toast
        //     }
        // });

      
        // function showToast(message, success) {
        //     const toastElement = document.getElementById("toast");
        //     const toastMessageElement = document.getElementById("toast-message");

        //     // 設定訊息文字
        //     toastMessageElement.textContent = message;

        //     // 根據 success 參數設定背景顏色//這邊無法更改
        //     // if (success) {
        //     //     toastElement.classList.remove("bg-success");
        //     //     toastElement.classList.add("bg-danger");
        //     // } else {
        //     //     toastElement.classList.remove("bg-danger");
        //     //     toastElement.classList.add("bg-success");
        //     // }

        //     // 使用 Bootstrap 的 JavaScript API 顯示 Toast
        //     const toast = new bootstrap.Toast(toastElement);
        //     toast.show();
        // }




    </script>
}